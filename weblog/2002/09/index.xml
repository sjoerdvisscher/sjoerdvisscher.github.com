<?xml version='1.0' encoding='iso-8859-1'?><?xml-stylesheet type='text/xsl' href='http://w3future.com/w3f/w3f.xsl' ?>
<html xmlns="http://www.w3.org/2002/06/xhtml2" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xf="http://www.w3.org/2002/xforms/cr" xml:lang="en" xml:base="http://w3future.com/weblog/2002/09/index.txt">
<head>
<title>Sjoerd Visscher's weblog</title>
</head>
<body>
<section id="content">
	<h>Sjoerd Visscher's weblog</h>
	<p></p>
	<section id="note">
		<h>Last Update</h>
		<p>10/16/2005; 1:23:41 AM</p>
		<p id="alternates" class="buttons">
			<l href="http://w3future.com/weblog/2002/09/index.xml?notransform" rel="alternate" type="application/xml" title="See this web page with XHTML 2.0 technology."><span>Try</span> XHTML 2.0</l>
			<l href="view-source:http://w3future.com/weblog/2002/09/index.xml?notransform" title="View the XHTML 2.0 source of this page."><span>Src</span> XHTML 2.0</l>
			<l href="http://w3future.com/tools/xr.pl?xr=http://w3future.com/xr/w3f.xml&amp;xml=http://w3future.com/weblog/2002/09/index.xml%3Fnotransform" rel="meta" type="application/rdf+xml" title="RDF metadata"><span>RDF</span> Metadata</l>
		</p>
		<xi:include href="http://w3future.com/w3f/buttons.xml" />
	</section><section>
  <h><a href="http://w3future.com/weblog/2002/09/19.xml">Thursday, September 19, 2002</a></h>
<a name="a132"></a>
<section id="a132">
<h id='rss2supportMailingList'><a href="http://w3future.com/weblog/2002/09/19.xml#a132" class="weblogItemTitle">RSS2-Support mailing list</a></h>
<p>Dave Winer suggested to me to start a mailing list for developers that want to support RSS 2.0. I looked if there would be an existing list for this purpose, but coulnd't find anything. RSS-DEV is a lot about developing a standard, and also has to much traffic. So I created a new list. <a href="http://groups.yahoo.com/group/RSS2-Support/">RSS2-Support</a>. The description is:</p>
<blockquote cite="http://groups.yahoo.com/group/RSS2-Support/"><p>If you are a developer, and you want to use RSS 2.0 in some way (reading or writing), you can come here to ask questions. This is not a list for long discussions! Let's focus on productivity.</p></blockquote>
</section>
</section><section>
  <h><a href="http://w3future.com/weblog/2002/09/18.xml">Wednesday, September 18, 2002</a></h>
<a name="a131"></a>
<section id="a131">
<h id='rssModulesInRadio'><a href="http://w3future.com/weblog/2002/09/18.xml#a131" class="weblogItemTitle">RSS Modules in Radio</a></h>
<blockquote cite="http://scriptingnews.userland.com/backissues/2002/09/17#When:2:10:15PM"><p>Based on a feature <a href="http://diveintomark.org/archives/2002/09/17.html#blink_and_youll_miss_it">request</a> by Mark Pilgrim, I designed my first <a href="http://backend.userland.com/blogChannelModule">RSS module</a> today, called blogChannel. It was fun. Scripting News already <a href="http://www.scripting.com/rss.xml">supports</a> it. [<a href="http://scriptingnews.userland.com/backissues/2002/09/17#When:2:10:15PM">Scripting News</a>]</p></blockquote>
<p>Interesting module. Looks fine with me! It would be cool if Userland would add some code to Radio to make it easy to implement RSS modules. Something like a table for each module with namespace and defaultPrefix fields, 2 scripts for serializing extra elements for the channel and for an item and 2 scripts as callbacks. The callbacks are called by the aggregator whenever a channel or an item contains elements from the module.</p>
</section>
</section><section>
  <h><a href="http://w3future.com/weblog/2002/09/10.xml">Tuesday, September 10, 2002</a></h>
<a name="a130"></a>
<section id="a130">
<h id='mailFromSeanBPalmer'><a href="http://w3future.com/weblog/2002/09/10.xml#a130" class="weblogItemTitle">Mail from Sean B. Palmer</a></h>
<p><a href="http://radio.weblogs.com/0101542/">Sean B. Palmer</a> notified me that the conversion of the Scripting News RSS file to RDF wasn't working properly. That's because while I was sleeping, Dave added a namespace to the RSS file. It's fixed now.</p><p>Sean also told me he is working on Semantic Schemata. We're very much on the same line. I'll quote from <a href="http://lists.w3.org/Archives/Public/www-archive/2002Feb/att-0003/01-index.html">his proposal:</a></p>
<blockquote cite="http://lists.w3.org/Archives/Public/www-archive/2002Feb/att-0003/01-index.html">
<p>"Decentalization" and "grounding semantics in the Web" are cliches, but for a good reason. As stated before, the semantics behind particular markup constructs vary over the contexts in which they are created, used, and otherwise interpreted. With the Web, we have the real opportunity to create some semblance of a shared context - we can agree to use terms without any one particular group dictating what will be.</p><p>With the introduction of XML namespaces, it made many buzzwords possible (for each new acronym created, at least ten buzzwords appear); decentralization, evolution, transformability. One of the key technologies for connecting the semantics of each language together is RDF. In fact, the various serializations of RDF are not important, but the model is.</p></blockquote>
</section>
</section><section>
  <h><a href="http://w3future.com/weblog/2002/09/09.xml">Monday, September 09, 2002</a></h>
<a name="a129"></a>
<section id="a129">
<h id='rss09420ToRdfConverter'><a href="http://w3future.com/weblog/2002/09/09.xml#a129" class="weblogItemTitle">RSS 0.94/2.0 to RDF converter</a></h>
<p>One possible implementation of semantic schemas is to convert XML to RDF with XSLT. So I created <a href="http://w3future.com/weblog/gems/rss2rdf.xsl">an XSLT file to convert RSS 0.94/2.0 to RDF</a>. The result is better than RSS 1.0, because it doesn't have to be backwards compatible. For example, <code>title</code> elements can become <code>dc:title</code> elements. I only used the standard modules, not the proposed ones. If anyone has suggestions for improvement (like an <a href="http://www.aaronsw.com/weblog/">RDF/RSS specialist</a>) I'd like to hear them. You can try it for your own RSS file at <a href="http://www.w3.org/2001/05/xslt">the W3C XSLT service</a>. Examples: <a href="http://www.w3.org/2000/06/webdata/xslt?xslfile=http%3A%2F%2Fw3future.com%2Fweblog%2Fgems%2Frss2rdf.xsl&amp;xmlfile=http%3A%2F%2Fw3future.com%2Fweblog%2Frss.xml&amp;transform=Submit">w3future</a>, 
<a href="http://www.w3.org/2000/06/webdata/xslt?xslfile=http%3A%2F%2Fw3future.com%2Fweblog%2Fgems%2Frss2rdf.xsl&amp;xmlfile=http%3A%2F%2Fwww.scripting.com%2Frss.xml&amp;transform=Submit">Scripting News</a>. Try to post the results in the <a href="http://www.w3.org/RDF/Validator/">W3C RDF Validator</a>. That will result in some fancy graph images.</p>
</section><a name="a128"></a>
<section id="a128">
<h id='rss20'><a href="http://w3future.com/weblog/2002/09/09.xml#a128" class="weblogItemTitle">RSS 2.0</a></h>
<blockquote cite="http://scriptingnews.userland.com/backissues/2002/09/09#attnSpecWonks">
<p>Tomorrow morning I plan to remove the <a href="http://backend.userland.com/rss#thisIsADraft">caveat</a> on the draft RSS 2.0 <a href="http://backend.userland.com/rss">specification</a>. Before then, if you see any problems (not mega-problems, please), let me know. [<a href="http://scriptingnews.userland.com/backissues/2002/09/09#attnSpecWonks">Scripting News</a>]</p></blockquote>
<p>There's one thing: most blogs have permalinks, so the <code>guid</code> element is almost always going to be a permalink. Therefore I suggest to make a guid to be a permalink by default. Add <code>noLink="true"</code> if it is not a URL.</p><p>Also my gut feeling is that calling this RSS 2.0 is a bit hasty. Let's first call it 0.94 and play with it a bit. It's the first time that namespaces are allowed. Maybe this adds big incompatibilities nobody thought of yet. RSS 2.0 deserves a bit of practical experience.</p>
</section>
</section><section>
  <h><a href="http://w3future.com/weblog/2002/09/08.xml">Sunday, September 08, 2002</a></h>
<a name="a127"></a>
<section id="a127">
<h id='anotherProblemWithRdf'><a href="http://w3future.com/weblog/2002/09/08.xml#a127" class="weblogItemTitle">Another problem with RDF</a></h>
<p><a href="http://weblog.burningbird.net/archives/000516.php">Shelley Powers proposed an RDF friendly version of RSS 2.0.</a> I have a <a href="http://w3future.com/weblog/gems/rdf_rss_example.xml">proposal</a> too. It uses <a href="http://lists.w3.org/Archives/Public/www-webont-wg/2002Jun/0003.html"><code>rdf:parseType="Collection"</code></a>.
This is new. And that the problem. RDF is in a state of flux. Yes, there is a <a href="http://www.w3.org/TR/1999/REC-rdf-syntax-19990222">recommendation</a>, but later it was realised that a few mistakes were made. And work was started on <a href="http://www.w3.org/TR/rdf-syntax-grammar/">refactoring the RDF/XML syntax</a>. RDF is simply not a solid foundation on which to build RSS.</p>
</section><a name="a126"></a>
<section id="a126">
<h id='theRss094Spec'><a href="http://w3future.com/weblog/2002/09/08.xml#a126" class="weblogItemTitle">The RSS 0.94 spec</a></h>
<p>The new <a href="http://backend.userland.com/rss#channelElements">table of elements in the RSS 0.94 spec</a> is a big improvement in clearity. One small suggestion: split it in two, required elements and optional elements. That saves one column.</p><p>By the way, if everybody hates <code>textInput</code> and <code>skipHours</code>, can't we just say so in the spec? Actually I think that's what <a href="http://scriptingnews.userland.com/stories/storyReader$1744#discontinuities">deprecated</a> means: Everybody hates it, but it's there so use it if you want to, but don't use it if you don't have to.</p>
</section>
</section><section>
  <h><a href="http://w3future.com/weblog/2002/09/07.xml">Saturday, September 07, 2002</a></h>
<a name="a125"></a>
<section id="a125">
<h id='otherUsesOfSemanticSchemas'><a href="http://w3future.com/weblog/2002/09/07.xml#a125" class="weblogItemTitle">Other uses of semantic schemas</a></h>
<p>Thinking more about the <a href="http://w3future.com/weblog/2002/09/07.html#a124">semantic schemas</a> I wrote about last night, I realized that it has more uses. <a href="http://www.w3.org/TR/xlink/">XLink</a> for example has the same problems as RDF. For XLinks to work, you have to add <a href="http://www.w3.org/TR/xlink/#att-method">XLink specific syntax</a> to your document. This is far from ideal, which became painfully clear when the first XHTML 2.0 draft was released <a href="http://lists.w3.org/Archives/Public/www-tag/2002Jul/0158.html">without XLink support</a>. A semantic schema for XHTML 2.0 can declare that the href attributes generate XLinks.</p>
<p>Another example. A month ago, when I tried to <a href="http://w3future.com/weblog/2002/08/07.html#a117">add support for XHTML 2.0 to the various browsers</a>, I found out that there's no way to tell the browser what the title of the document is. A semantic schema can declare what the title of a document is. <a href="http://www.google.com/search?q=w3future+rss">Google needs to know what the title of an xml document is</a> too.</p>
</section><a name="a124"></a>
<section id="a124">
<h id='isRdfAFailure'><a href="http://w3future.com/weblog/2002/09/07.xml#a124" class="weblogItemTitle">Is RDF a failure?</a></h>
<p>OK, the discussions aren't over yet, but it looks like RDF is no longer an option for RSS. This may worry the RDF fans, because RDF should have been a perfect match for RSS. RDF is designed to be a format to describe website meta-data. And that is exactly what RSS is. So is RDF a failure?</p>
<p>There are two problems that have prevented wide-spread adoption of RDF-style RSS. The first one is that there is no added value in using RDF over plain XML. All applications that use RSS, are RSS specific applications. They don't combine the data with loads of other information, simply because there isn't any except other RSS files. So these applications don't need a general semantic format, because they have the RSS semantics built-in. The second problem is the added complexity of the syntax. It's a bit ugly and the purpose of the extra syntax is far from self-explaining, which quickly lead to mistakes in implementations. Also the first mentioned problem makes it just not worth the trouble.</p>
<p>Note that these 2 problems are hardly RSS specific. They will also arise in other attempts to deploy RDF in a community. RDF seems doomed. But I think RDF still has the future, or at least the model of RDF has the future. The problems are in the serialization of RDF. Serialization is all about making concessions to conciseness, file size, readability, streamability etc. It depends on the situation which of these properties are more important than others. So if you design a general format, it is always going to be inferior to a specificly designed format. With RDF this is even worse because RDF can make absolutely no concessions towards semantics.</p>
<p>Given all this it is unlikely that RDF as serialized in XML is going to be widely adopted. People want their XML the way they want it, and don't want to be bothered with the semantics. That's also because they already know the semantics of their own XML. It's those that want to put it all together that want a semantic format, not those who design a single format. But the information is already there, in all those XML files everywhere. Once there's a way to specify how to convert an XML format to the RDF model, you have both the freedom of the XML format, and the exciting features of the RDF model that will give us the Semantic Web. And once there's such a &#8220;semantics schema&#8221; for RSS, I'm sure the RSS developers are very willing to add that one extra attribute or element to point to the schema, if that's the only thing it takes to take part in the Semantic Web.</p>
</section>
</section><section>
  <h><a href="http://w3future.com/weblog/2002/09/06.xml">Friday, September 06, 2002</a></h>
<a name="a123"></a>
<section id="a123">
<h id='theFutureOfRss'><a href="http://w3future.com/weblog/2002/09/06.xml#a123" class="weblogItemTitle">The future of RSS</a></h>
<p>It seems that the future of RSS is emerging. &#8220;What do you think?&#8221; <a href="http://scriptingnews.userland.com/backissues/2002/09/05#addingNamespacesTo094">asks Dave</a>. I like it! Modules are just perfect for the next step in RSS use. And there's no burdon of the crippled syntax of RDF. There's no doubt in my mind that this is the way to go. But then there remains the issue of putting some of the old elements in modules.</p><p>Imagine a core RSS  of these elements: <code>rss</code>, <code>channel</code> with <code>title</code>, <code>link</code>, <code>description</code> and <code>language</code>, and <code>item</code> with <code>title</code>, <code>link</code> and <code>description</code>. This is a core which you can't touch, because most older RSS implementations use these. This is also a core that's very useful and a low barrier to implement. The other elements should be grouped in modules, using namespaces. I believe that applications that use these elements are in active development, and can be easily changed. This requires some effort from implementors, but the result is a clean future-compatible RSS basis, that can remain popular as long as XML remains popular.</p><p>It is important though that older RSS files never become invalid, and that never any essential information is lost.  So elements like <code>image</code> should become <em>deprecated</em>. And future RSS application might only support the module version of the  <code>image</code> element, and they will ignore the old <code>image</code> element without namespace. But the application will still read the essential information that is available in the old RSS file.</p>
</section>
</section><section>
  <h><a href="http://w3future.com/weblog/2002/09/02.xml">Monday, September 02, 2002</a></h>
<a name="a122"></a>
<section id="a122">
<h id='firstXopusOpenSourceReleaseOnline'><a href="http://w3future.com/weblog/2002/09/02.xml#a122" class="weblogItemTitle">First Xopus open source release online</a></h>
<p>My colleague at <a href="http://q42.nl">Q42</a> who runs <a href="http://xopus.org">the Xopus project</a> put <a href="http://xopus.org/index.jsp?menu=downloads">a stable release online</a> last friday. There's even some good documentation in the package! You can start making your XML/XSL based website editable in the browser right now. Remember, it runs both in IE and Mozilla.</p>
</section>
</section>
<xi:include href="http://w3future.com/tools/rdf.php?about=http://w3future.com/weblog/2002/09/index.txt" /></section>
<section id="navigation"><xi:include href="http://w3future.com/w3f/sections.xml" /></section>
<section id="sidebar"><xi:include href="http://w3future.com/weblog/sidebars/weblog.opml" /></section>
</body>
</html>